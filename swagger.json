{
  "openapi": "3.0.0",
  "info": {
    "title": "Food Delivery - User Service API",
    "version": "1.0.0",
    "description": "API for managing user registration, login, and profile details in the food delivery service."
  },
  "servers": [
    {
      "url": "http://localhost:8083/api/v1"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Register a new User",
        "description": "Create a new user with a given name, email, password, and role.",
        "operationId": "registerUser",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "example": "customer"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "example": "active"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User added successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "user"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - User already exists"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login User",
        "description": "Authenticate a user with email and password, and return a JWT token.",
        "operationId": "loginUser",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully"
                    },
                    "token": {
                      "type": "string",
                      "example": "jwt_token_here"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User email not found or incorrect password"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "summary": "Fetch User Profile",
        "description": "Get the details of the authenticated user.",
        "operationId": "fetchUserProfile",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "user"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/user/{customerId}": {
      "get": {
        "summary": "Fetch User by ID",
        "description": "Fetches details of a user by their ID if the user is active.",
        "operationId": "fetchUserById",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the customer to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Customer retrieved successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "customer"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-19T17:35:34.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-19T17:35:34.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User is not active",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not active"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error retrieving user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating User"
                    },
                    "error": {
                      "type": "string",
                      "example": "Some error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/orders": {
      "get": {
        "summary": "Get Orders by Customer ID",
        "description": "Fetches all orders related to a specific customer by their customer ID.",
        "operationId": "fetchOrdersByCustomerId",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Orders retrieved successfully"
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "integer",
                            "example": 101
                          },
                          "orderStatus": {
                            "type": "string",
                            "example": "delivered"
                          },
                          "orderDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-11-19T15:30:00Z"
                          },
                          "totalAmount": {
                            "type": "number",
                            "example": 45.99
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error getting orders"
                    },
                    "error": {
                      "type": "string",
                      "example": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error getting orders"
                    },
                    "error": {
                      "type": "string",
                      "example": "Some error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/orders/{orderId}": {
      "get": {
        "summary": "Fetch Order Details by ID",
        "description": "Retrieves the details of an order by its order ID, including related delivery details if available.",
        "operationId": "fetchOrderById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the order to fetch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order details retrieved successfully"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "orderId": {
                          "type": "string",
                          "example": "12345"
                        },
                        "product": {
                          "type": "string",
                          "example": "Laptop"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 1
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "example": 999.99
                        },
                        "delivery": {
                          "type": "object",
                          "properties": {
                            "deliveryId": {
                              "type": "string",
                              "example": "abc123"
                            },
                            "status": {
                              "type": "string",
                              "example": "Delivered"
                            },
                            "estimatedDeliveryDate": {
                              "type": "string",
                              "format": "date",
                              "example": "2024-11-25"
                            }
                          },
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Error getting order details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error getting order details"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unable to fetch order details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}